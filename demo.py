#!/usr/bin/env python3
"""
Demo script ƒë·ªÉ ch·∫°y FPT University Agent tr·ª±c ti·∫øp
S·ª≠ d·ª•ng service_factory ƒë·ªÉ kh·ªüi t·∫°o agent
"""

import asyncio
import sys
from pathlib import Path

# Add src to Python path
current_dir = Path(__file__).parent
src_dir = current_dir / "src"
sys.path.insert(0, str(src_dir))

from api.factories.service_factory import ServiceFactory
from api.agents.fpt_agent import create_fpt_agent_manager


async def main():
    """Main function ƒë·ªÉ ch·∫°y agent demo v·ªõi list c√¢u h·ªèi c√≥ s·∫µn"""

    print("üöÄ Kh·ªüi t·∫°o FPT University Agent...")

    # Kh·ªüi t·∫°o service factory
    service_factory = ServiceFactory()

    # Kh·ªüi t·∫°o services
    await service_factory.initialize_services(
        model_id="gpt-4o",
        debug_mode=False
    )

    # L·∫•y intent service
    intent_service = service_factory.get_intent_service()

    # List c√¢u h·ªèi demo
    demo_questions = [
        # "H·ªçc ph√≠ ng√†nh CNTT bao nhi√™u?",
        "Ch√≠nh s√°ch h·ªçc b·ªïng 2025 c·ªßa FPT c√≥ g√¨ m·ªõi?"
        # "ƒêi·ªÉm chu·∫©n ng√†nh AI nƒÉm 2025?",
        # "C∆° s·ªü FPT ·ªü ƒë√¢u?",
        # "Th·ªùi gian h·ªçc ng√†nh Software Engineering?",
        # "C√≥ ch∆∞∆°ng tr√¨nh h·ªçc b·ªïng kh√¥ng?",
        # "Th∆∞ vi·ªán m·ªü c·ª≠a gi·ªù n√†o?",
        # "C√≥ k√Ω t√∫c x√° cho sinh vi√™n kh√¥ng?",
        # "Ng√†nh Data Science h·ªçc nh·ªØng g√¨?",
        # "C√≥ ch∆∞∆°ng tr√¨nh trao ƒë·ªïi sinh vi√™n kh√¥ng?",
        # "Th·ªùi ti·∫øt h√¥m nay th·∫ø n√†o?"
    ]

    # S·ª≠ d·ª•ng context manager ƒë·ªÉ ƒë·∫£m b·∫£o cleanup
    async with create_fpt_agent_manager(intent_service=intent_service) as agent:
        print("‚úÖ Agent ƒë√£ s·∫µn s√†ng!")
        print("=" * 50)

        # Ch·∫°y demo v·ªõi list c√¢u h·ªèi
        for i, question in enumerate(demo_questions, 1):
            print(f"\nüîç C√¢u h·ªèi {i}: {question}")

            # Ch·∫°y agent
            await agent.aprint_response(question, user_id="demo_user", stream=True)

            print("-" * 50)

        print("\n‚úÖ Demo ho√†n th√†nh!")


if __name__ == "__main__":
    asyncio.run(main())
